****************************
Test -> 4-print_square.py
============================

>>> print_square = __import__("4-print_square").print_square

=======Succes cases=========

>>> print_square(1)
#

>>> print_square(4)
####
####
####
####

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(0)

======Error cases===========
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square(3.3)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square("4 x 4")
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square([4, 4])
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square({4, 4})
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square((4, 4))
Traceback (most recent call last):
...
TypeError: size must be an integer

========Not Negative===========
>>> print_square(-4)
Traceback (most recent call last):
...
ValueError: size must be >= 0

=======Arguments Errors========
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'

>>> print_square(2, 2)
Traceback (most recent call last):
...
TypeError: print_square() takes 1 positional argument but 2 were given
